version: "3.9"
services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    ports:
      - "8080:8080"
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1  # Set to 0 for production
      - DATABASE_URL=sqlite:///instance/gold_investment.db  
      # Flask Configuration
      SECRET_KEY=12156896345b529fefd77aa18c0cf5707ae11d64e3e8f8b44d154973bddeb620  # Required: Used for session security
            # Blockchain Configuration 
      CONTRACT_ADDRESS=0x742d35Cc6634C0532925a3b844Bc454e4438f44e  # Required: Smart contract address
      PRIVATE_KEY=0x518ac41D687ca9A77bf7c18e87399171eBD188D3   # Required: Your wallet private key

      # RPC Configuration
      RPC_ENDPOINTS=https://polygon-mainnet.g.alchemy.com/v2/_WCN6RHcMUKuEz-jWCb8gBhl_Eofzvb4  # Required: Comma-separated RPC endpoints

      # Optional Configuration
      DEBUG=False  # Optional: Enable debug mode
      TESTING=False  # Optional: Enable testing mode
    # Percorso database SQLite (esempio)
      # ... (aggiungi qui *tutte le altre variabili d'ambiente* necessarie per il backend Flask, es. SECRET_KEY, RPC_ENDPOINTS, CONTRACT_ADDRESS, PRIVATE_KEY, ecc.) ...
    volumes:
      - ./instance:/app/instance  # Mappa la cartella "instance" locale alla cartella "/app/instance" nel container (per persistere il database SQLite)
    depends_on:
      - blockchain  # Il backend dipende dalla blockchain: Docker Compose si assicura che la blockchain parta *prima* del backend

  blockchain:
    build:
      context: .
      dockerfile: Dockerfile-blockchain
    ports:
      - "8545:8545"  # Porta standard di Hardhat JSON-RPC
    volumes:
      - ./blockchain:/blockchain-app  # Mappa la cartella "blockchain" locale alla cartella "/blockchain-app" nel container (per persistere i dati della blockchain, se necessario)

  frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    ports:
      - "3000:3000"  # Porta standard del frontend React
    depends_on:
      - backend      # Il frontend dipende dal backend: Docker Compose si assicura che il backend parta *prima* del frontend
    environment:
      - VITE_BACKEND_API_URL=http://localhost:8080/api/v1  # URL API del backend Flask (nel container Docker, localhost si riferisce al *container del backend*)